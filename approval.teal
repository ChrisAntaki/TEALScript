#pragma version 8
b main
abi_route_exampleAbiMethod:
txna ApplicationArgs 1
txnas Accounts
txna ApplicationArgs 2
txnas Accounts
callsub exampleAbiMethod
int 1
return
exampleAbiMethod:
proto 2 0
frame_dig -1 // firstAccount: Account
itob
frame_dig -1 // firstAccount: Account
acct_params_get AcctBalance
assert
itob
box_put
frame_dig -2 // secondAccount: Account
itob
frame_dig -2 // secondAccount: Account
acct_params_get AcctBalance
assert
itob
box_put
bytes "fn"
int 42
itob
box_put
bytes "sg"
int 123
app_global_put
byte "foo"
int 456
app_global_put
itxn_begin
int pay
itxn_field TypeEnum
int 0
itxn_field Fee
frame_dig -1 // firstAccount: Account
itxn_field Receiver
int 100000
itxn_field Amount
itxn_submit
itxn_begin
int appl
itxn_field TypeEnum
int 0
itxn_field Fee
int 1337
itxn_field ApplicationID
byte "foo"
itxn_field ApplicationArgs
byte "bar"
itxn_field ApplicationArgs
byte "NoOp"
itxn_field OnComplete
itxn_submit
itxn_begin
int appl
itxn_field TypeEnum
method "exampleExternalMethod(account,uint64)void"
itxn_field ApplicationArgs
int 0
itxn_field Fee
int 1337
itxn_field ApplicationID
byte "NoOp"
itxn_field OnComplete
frame_dig -1 // firstAccount: Account
txn_field Accounts
int 1
itob
itxn_field ApplicationArgs
int 42
itob
itxn_field ApplicationArgs
itxn_submit
frame_dig -1 // firstAccount: Account
itob
box_get
btoi
itob
log
byte "HERE"
store 0 // msg: string
load 0 // msg: string
log
frame_dig -1 // firstAccount: Account
log
frame_dig -2 // secondAccount: Account
log
if0_condition:
frame_dig -1 // firstAccount: Account
acct_params_get AcctBalance
swap
pop
frame_dig -2 // secondAccount: Account
acct_params_get AcctBalance
swap
pop
&&
bz if0_end
byte "Both accounts have a balance!"
log
if0_end:
frame_dig -1 // firstAccount: Account
acct_params_get AcctBalance
assert
frame_dig -2 // secondAccount: Account
acct_params_get AcctBalance
assert
+
store 1 // totalBalance: uint64
if1_condition:
load 1 // totalBalance: uint64
int 0
==
bz if1_elseif1_condition
byte "These accounts have nothing"
log
b if1_end
if1_elseif1_condition:
load 1 // totalBalance: uint64
int 100000000000000
>
bz if1_elseif2_condition
byte "At least one of these accounts is a whale"
log
b if1_end
if1_elseif2_condition:
load 1 // totalBalance: uint64
int 1000000000000
>
bz if1_end
byte "These accounts have a reasonable balance"
log
if1_end:
int 456
store 2 // id: uint64
load 2 // id: uint64
store 3 // acct: Account
if2_condition:
load 3 // acct: Account
acct_params_get AcctBalance
swap
pop
bz if2_end
load 3 // acct: Account
acct_params_get AcctBalance
assert
itob
log
if2_end:
frame_dig -1 // firstAccount: Account
callsub exampleInteralSubroutine
load 1 // totalBalance: uint64
itob
byte 0x151f7c75
swap
concat
retsub
exampleInteralSubroutine:
proto 1 1
global CurrentApplication
app_params_get AppAddress
assert
acct_params_get AcctBalance
assert
store 4 // bal: uint64
load 4 // bal: uint64
itob
log
frame_dig -1 // account: Account
int 1337
asset_holding_get AssetBalance
assert
itob
log
global CurrentApplication
app_params_get AppAddress
assert
int 42
asset_holding_get AssetBalance
assert
itob
log
frame_dig -1 // account: Account
acct_params_get AcctBalance
assert
itob
byte 0x151f7c75
swap
concat
retsub
main:
method "exampleAbiMethod(account,account)uint64"
txna ApplicationArgs 0
match abi_route_exampleAbiMethod